// This file is generated by Simplicity Studio.  Please do not edit manually.
//
//

// Enclosing macro to prevent multiple inclusion
#ifndef SILABS_AF_ENDPOINT_CONFIG
#define SILABS_AF_ENDPOINT_CONFIG


// Fixed number of defined endpoints
#define FIXED_ENDPOINT_COUNT (4)


// Generated defaults
#if BIGENDIAN_CPU
#define GENERATED_DEFAULTS { \
0xE7, 0xFF, 0xFF, 0xFF /* 0,Default value: Sub-GHz,sub-GHz page 28 channel mask (server) */, \
0xE8, 0x00, 0x01, 0xFF /* 4,Default value: Sub-GHz,sub-GHz page 29 channel mask (server) */, \
0xF7, 0xFF, 0xFF, 0xFF /* 8,Default value: Sub-GHz,sub-GHz page 30 channel mask (server) */, \
0xFF, 0xFF, 0xFF, 0xFF /* 12,Default value: Sub-GHz,sub-GHz page 31 channel mask (server) */, \
  }
#else // ! BIGENDIAN_CPU
#define GENERATED_DEFAULTS { \
0xFF, 0xFF, 0xFF, 0xE7 /* 0,Default value: Sub-GHz,sub-GHz page 28 channel mask (server) */, \
0xFF, 0x01, 0x00, 0xE8 /* 4,Default value: Sub-GHz,sub-GHz page 29 channel mask (server) */, \
0xFF, 0xFF, 0xFF, 0xF7 /* 8,Default value: Sub-GHz,sub-GHz page 30 channel mask (server) */, \
0xFF, 0xFF, 0xFF, 0xFF /* 12,Default value: Sub-GHz,sub-GHz page 31 channel mask (server) */, \
  }
#endif // BIGENDIAN_CPU




// Generated attributes
#define GENERATED_ATTRIBUTES { \
    { 0x0000, ZCL_INT8U_ATTRIBUTE_TYPE, 1, (ATTRIBUTE_MASK_SINGLETON), { (uint8_t*)0x03 } }, /* 0 / Basic / ZCL version*/\
    { 0x0001, ZCL_INT8U_ATTRIBUTE_TYPE, 1, (ATTRIBUTE_MASK_EXTERNAL_STORAGE), { (uint8_t*)0x00 } }, /* 1 / Basic / application version*/\
    { 0x0002, ZCL_INT8U_ATTRIBUTE_TYPE, 1, (ATTRIBUTE_MASK_EXTERNAL_STORAGE), { (uint8_t*)0x00 } }, /* 2 / Basic / stack version*/\
    { 0x0003, ZCL_INT8U_ATTRIBUTE_TYPE, 1, (ATTRIBUTE_MASK_EXTERNAL_STORAGE), { (uint8_t*)0x00 } }, /* 3 / Basic / hardware version*/\
    { 0x0004, ZCL_CHAR_STRING_ATTRIBUTE_TYPE, 33, (ATTRIBUTE_MASK_EXTERNAL_STORAGE), { NULL } }, /* 4 / Basic / manufacturer name*/\
    { 0x0005, ZCL_CHAR_STRING_ATTRIBUTE_TYPE, 33, (ATTRIBUTE_MASK_EXTERNAL_STORAGE), { NULL } }, /* 5 / Basic / model identifier*/\
    { 0x0007, ZCL_ENUM8_ATTRIBUTE_TYPE, 1, (ATTRIBUTE_MASK_SINGLETON), { (uint8_t*)0x00 } }, /* 6 / Basic / power source*/\
    { 0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_SINGLETON), { (uint8_t*)0x0001 } }, /* 7 / Basic / cluster revision*/\
    { 0x0000, ZCL_UTC_TIME_ATTRIBUTE_TYPE, 4, (ATTRIBUTE_MASK_WRITABLE|ATTRIBUTE_MASK_SINGLETON), { NULL } }, /* 8 / Time / time*/\
    { 0x0001, ZCL_BITMAP8_ATTRIBUTE_TYPE, 1, (ATTRIBUTE_MASK_WRITABLE|ATTRIBUTE_MASK_SINGLETON), { (uint8_t*)0x00 } }, /* 9 / Time / time status*/\
    { 0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_SINGLETON), { (uint8_t*)0x0001 } }, /* 10 / Time / cluster revision*/\
    { 0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t*)0x0001 } }, /* 11 / Over the Air Bootloading / cluster revision*/\
    { 0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t*)0x0001 } }, /* 12 / Price / cluster revision*/\
    { 0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t*)0x0001 } }, /* 13 / Demand Response and Load Control / cluster revision*/\
    { 0x0000, ZCL_INT48U_ATTRIBUTE_TYPE, 6, (ATTRIBUTE_MASK_EXTERNAL_STORAGE), { NULL } }, /* 14 / Simple Metering / current summation delivered*/\
    { 0x0200, ZCL_BITMAP8_ATTRIBUTE_TYPE, 1, (0x00), { (uint8_t*)0x00 } }, /* 15 / Simple Metering / status*/\
    { 0x0300, ZCL_ENUM8_ATTRIBUTE_TYPE, 1, (0x00), { (uint8_t*)0x00 } }, /* 16 / Simple Metering / unit of measure*/\
    { 0x0303, ZCL_BITMAP8_ATTRIBUTE_TYPE, 1, (0x00), { (uint8_t*)0x00 } }, /* 17 / Simple Metering / summation formatting*/\
    { 0x0306, ZCL_BITMAP8_ATTRIBUTE_TYPE, 1, (0x00), { (uint8_t*)0x00 } }, /* 18 / Simple Metering / metering device type*/\
    { 0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t*)0x0001 } }, /* 19 / Simple Metering / cluster revision*/\
    { 0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t*)0x0001 } }, /* 20 / Messaging / cluster revision*/\
    { 0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT), { (uint8_t*)0x0001 } }, /* 21 / Tunneling / cluster revision*/\
    { 0x0000, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t*)0xFFFF } }, /* 22 / Tunneling / close tunnel timeout*/\
    { 0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t*)0x0001 } }, /* 23 / Tunneling / cluster revision*/\
    { 0x0000, ZCL_BITMAP16_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t*)0x0000 } }, /* 24 / Prepayment / payment control configuration*/\
    { 0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t*)0x0001 } }, /* 25 / Prepayment / cluster revision*/\
    { 0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t*)0x0001 } }, /* 26 / Calendar / cluster revision*/\
    { 0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (0x00), { (uint8_t*)0x0001 } }, /* 27 / Device Management / cluster revision*/\
    { 0x0000, ZCL_BITMAP32_ATTRIBUTE_TYPE, 4, (ATTRIBUTE_MASK_SINGLETON), { NULL } }, /* 28 / Sub-GHz / sub-GHz channel change (server)*/\
    { 0x0001, ZCL_BITMAP32_ATTRIBUTE_TYPE, 4, (ATTRIBUTE_MASK_SINGLETON), { (uint8_t*)&(generatedDefaults[0]) } }, /* 29 / Sub-GHz / sub-GHz page 28 channel mask (server)*/\
    { 0x0002, ZCL_BITMAP32_ATTRIBUTE_TYPE, 4, (ATTRIBUTE_MASK_SINGLETON), { (uint8_t*)&(generatedDefaults[4]) } }, /* 30 / Sub-GHz / sub-GHz page 29 channel mask (server)*/\
    { 0x0003, ZCL_BITMAP32_ATTRIBUTE_TYPE, 4, (ATTRIBUTE_MASK_SINGLETON), { (uint8_t*)&(generatedDefaults[8]) } }, /* 31 / Sub-GHz / sub-GHz page 30 channel mask (server)*/\
    { 0x0004, ZCL_BITMAP32_ATTRIBUTE_TYPE, 4, (ATTRIBUTE_MASK_SINGLETON), { (uint8_t*)&(generatedDefaults[12]) } }, /* 32 / Sub-GHz / sub-GHz page 31 channel mask (server)*/\
    { 0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_SINGLETON), { (uint8_t*)0x0001 } }, /* 33 / Sub-GHz / cluster revision*/\
    { 0x0000, ZCL_ENUM16_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT|ATTRIBUTE_MASK_SINGLETON), { (uint8_t*)0x0000 } }, /* 34 / Key Establishment / key establishment suite (client)*/\
    { 0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_CLIENT|ATTRIBUTE_MASK_SINGLETON), { (uint8_t*)0x0001 } }, /* 35 / Key Establishment / cluster revision*/\
    { 0x0000, ZCL_ENUM16_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_SINGLETON), { (uint8_t*)0x0000 } }, /* 36 / Key Establishment / key establishment suite (server)*/\
    { 0xFFFD, ZCL_INT16U_ATTRIBUTE_TYPE, 2, (ATTRIBUTE_MASK_SINGLETON), { (uint8_t*)0x0001 } }, /* 37 / Key Establishment / cluster revision*/\
  }


// Cluster function static arrays
#define GENERATED_FUNCTION_ARRAYS \
const EmberAfGenericClusterFunction emberAfFuncArrayTimeClusterServer[] = { (EmberAfGenericClusterFunction)emberAfTimeClusterServerInitCallback}; \
const EmberAfGenericClusterFunction emberAfFuncArrayTunnelingClusterClient[] = { (EmberAfGenericClusterFunction)emberAfTunnelingClusterClientInitCallback}; \
const EmberAfGenericClusterFunction emberAfFuncArrayTunnelingClusterServer[] = { (EmberAfGenericClusterFunction)emberAfTunnelingClusterServerInitCallback,(EmberAfGenericClusterFunction)emberAfTunnelingClusterServerAttributeChangedCallback}; \
const EmberAfGenericClusterFunction emberAfFuncArrayKeyEstablishmentClusterClient[] = { (EmberAfGenericClusterFunction)emberAfKeyEstablishmentClusterClientAttributeChangedCallback,(EmberAfGenericClusterFunction)emberAfKeyEstablishmentClusterClientDefaultResponseCallback,(EmberAfGenericClusterFunction)emberAfKeyEstablishmentClusterClientMessageSentCallback,(EmberAfGenericClusterFunction)emberAfKeyEstablishmentClusterClientPreAttributeChangedCallback}; \
const EmberAfGenericClusterFunction emberAfFuncArrayKeyEstablishmentClusterServer[] = { (EmberAfGenericClusterFunction)emberAfKeyEstablishmentClusterServerInitCallback,(EmberAfGenericClusterFunction)emberAfKeyEstablishmentClusterServerAttributeChangedCallback,(EmberAfGenericClusterFunction)emberAfKeyEstablishmentClusterServerDefaultResponseCallback,(EmberAfGenericClusterFunction)emberAfKeyEstablishmentClusterServerMessageSentCallback,(EmberAfGenericClusterFunction)emberAfKeyEstablishmentClusterServerPreAttributeChangedCallback}; \


// Clusters definitions
#define GENERATED_CLUSTERS { \
    { 0x0000, (EmberAfAttributeMetadata*)&(generatedAttributes[0]), 8, 0, (CLUSTER_MASK_SERVER), NULL,  },    \
    { 0x000A, (EmberAfAttributeMetadata*)&(generatedAttributes[8]), 3, 0, (CLUSTER_MASK_SERVER| CLUSTER_MASK_INIT_FUNCTION), emberAfFuncArrayTimeClusterServer, },    \
    { 0x0019, (EmberAfAttributeMetadata*)&(generatedAttributes[11]), 1, 2, (CLUSTER_MASK_SERVER), NULL,  },    \
    { 0x0704, (EmberAfAttributeMetadata*)&(generatedAttributes[21]), 1, 2, (CLUSTER_MASK_CLIENT| CLUSTER_MASK_INIT_FUNCTION), emberAfFuncArrayTunnelingClusterClient, },    \
    { 0x0704, (EmberAfAttributeMetadata*)&(generatedAttributes[22]), 2, 4, (CLUSTER_MASK_SERVER| CLUSTER_MASK_INIT_FUNCTION| CLUSTER_MASK_ATTRIBUTE_CHANGED_FUNCTION), emberAfFuncArrayTunnelingClusterServer, },    \
    { 0x070B, (EmberAfAttributeMetadata*)&(generatedAttributes[28]), 6, 0, (CLUSTER_MASK_SERVER), NULL,  },    \
    { 0x0800, (EmberAfAttributeMetadata*)&(generatedAttributes[34]), 2, 0, (CLUSTER_MASK_CLIENT| CLUSTER_MASK_ATTRIBUTE_CHANGED_FUNCTION| CLUSTER_MASK_DEFAULT_RESPONSE_FUNCTION| CLUSTER_MASK_MESSAGE_SENT_FUNCTION| CLUSTER_MASK_PRE_ATTRIBUTE_CHANGED_FUNCTION), emberAfFuncArrayKeyEstablishmentClusterClient, },    \
    { 0x0800, (EmberAfAttributeMetadata*)&(generatedAttributes[36]), 2, 0, (CLUSTER_MASK_SERVER| CLUSTER_MASK_INIT_FUNCTION| CLUSTER_MASK_ATTRIBUTE_CHANGED_FUNCTION| CLUSTER_MASK_DEFAULT_RESPONSE_FUNCTION| CLUSTER_MASK_MESSAGE_SENT_FUNCTION| CLUSTER_MASK_PRE_ATTRIBUTE_CHANGED_FUNCTION), emberAfFuncArrayKeyEstablishmentClusterServer, },    \
    { 0x0000, (EmberAfAttributeMetadata*)&(generatedAttributes[0]), 8, 0, (CLUSTER_MASK_SERVER), NULL,  },    \
    { 0x000A, (EmberAfAttributeMetadata*)&(generatedAttributes[8]), 3, 0, (CLUSTER_MASK_SERVER| CLUSTER_MASK_INIT_FUNCTION), emberAfFuncArrayTimeClusterServer, },    \
    { 0x0700, (EmberAfAttributeMetadata*)&(generatedAttributes[12]), 1, 2, (CLUSTER_MASK_SERVER), NULL,  },    \
    { 0x0701, (EmberAfAttributeMetadata*)&(generatedAttributes[13]), 1, 2, (CLUSTER_MASK_SERVER), NULL,  },    \
    { 0x0702, (EmberAfAttributeMetadata*)&(generatedAttributes[14]), 6, 6, (CLUSTER_MASK_SERVER), NULL,  },    \
    { 0x0703, (EmberAfAttributeMetadata*)&(generatedAttributes[20]), 1, 2, (CLUSTER_MASK_SERVER), NULL,  },    \
    { 0x0705, (EmberAfAttributeMetadata*)&(generatedAttributes[24]), 2, 4, (CLUSTER_MASK_SERVER), NULL,  },    \
    { 0x0707, (EmberAfAttributeMetadata*)&(generatedAttributes[26]), 1, 2, (CLUSTER_MASK_SERVER), NULL,  },    \
    { 0x0708, (EmberAfAttributeMetadata*)&(generatedAttributes[27]), 1, 2, (CLUSTER_MASK_SERVER), NULL,  },    \
    { 0x0800, (EmberAfAttributeMetadata*)&(generatedAttributes[34]), 2, 0, (CLUSTER_MASK_CLIENT| CLUSTER_MASK_ATTRIBUTE_CHANGED_FUNCTION| CLUSTER_MASK_DEFAULT_RESPONSE_FUNCTION| CLUSTER_MASK_MESSAGE_SENT_FUNCTION| CLUSTER_MASK_PRE_ATTRIBUTE_CHANGED_FUNCTION), emberAfFuncArrayKeyEstablishmentClusterClient, },    \
    { 0x0800, (EmberAfAttributeMetadata*)&(generatedAttributes[36]), 2, 0, (CLUSTER_MASK_SERVER| CLUSTER_MASK_INIT_FUNCTION| CLUSTER_MASK_ATTRIBUTE_CHANGED_FUNCTION| CLUSTER_MASK_DEFAULT_RESPONSE_FUNCTION| CLUSTER_MASK_MESSAGE_SENT_FUNCTION| CLUSTER_MASK_PRE_ATTRIBUTE_CHANGED_FUNCTION), emberAfFuncArrayKeyEstablishmentClusterServer, },    \
  }


// Endpoint types
#define GENERATED_ENDPOINT_TYPES {        \
    { (EmberAfCluster*)&(generatedClusters[0]), 8, 8 }, \
    { (EmberAfCluster*)&(generatedClusters[8]), 11, 20 }, \
  }


// Cluster manufacturer codes
#define GENERATED_CLUSTER_MANUFACTURER_CODES {      \
{0x00, 0x00} \
  }
#define GENERATED_CLUSTER_MANUFACTURER_CODE_COUNT (0)

// Attribute manufacturer codes
#define GENERATED_ATTRIBUTE_MANUFACTURER_CODES {      \
{0x00, 0x00} \
  }
#define GENERATED_ATTRIBUTE_MANUFACTURER_CODE_COUNT (0)


// Largest attribute size is needed for various buffers
#define ATTRIBUTE_LARGEST (33)
// Total size of singleton attributes
#define ATTRIBUTE_SINGLETONS_SIZE (41)

// Total size of attribute storage
#define ATTRIBUTE_MAX_SIZE 68

// Array of endpoints that are supported
#define FIXED_ENDPOINT_ARRAY { 1, 2, 3, 4 }

// Array of profile ids
#define FIXED_PROFILE_IDS { 265, 265, 265, 265 }

// Array of device ids
#define FIXED_DEVICE_IDS { 1288, 1280, 1280, 1280 }

// Array of device versions
#define FIXED_DEVICE_VERSIONS { 1, 1, 1, 1 }

// Array of endpoint types supported on each endpoint
#define FIXED_ENDPOINT_TYPES { 0, 1, 1, 1 }

// Array of networks supported on each endpoint
#define FIXED_NETWORKS { 0, 0, 0, 0 }


#define EMBER_AF_GENERATED_PLUGIN_INIT_FUNCTION_DECLARATIONS \
  void emberAfPluginNetworkFindInitCallback(void); \
  void emberAfPluginFragmentationInitCallback(void); \
  void emberAfPluginCountersInitCallback(void); \


#define EMBER_AF_GENERATED_PLUGIN_INIT_FUNCTION_CALLS \
  emberAfPluginNetworkFindInitCallback(); \
  emberAfPluginFragmentationInitCallback(); \
  emberAfPluginCountersInitCallback(); \


#define EMBER_AF_GENERATED_PLUGIN_NCP_INIT_FUNCTION_DECLARATIONS \
  void emberAfPluginFragmentationNcpInitCallback(bool memoryAllocation); \
  void emberAfPluginAddressTableNcpInitCallback(bool memoryAllocation); \


#define EMBER_AF_GENERATED_PLUGIN_NCP_INIT_FUNCTION_CALLS \
  emberAfPluginFragmentationNcpInitCallback(memoryAllocation); \
  emberAfPluginAddressTableNcpInitCallback(memoryAllocation); \


#define EMBER_AF_GENERATED_PLUGIN_STACK_STATUS_FUNCTION_DECLARATIONS \
  void emberAfPluginNetworkFindStackStatusCallback(EmberStatus status); \
  void emberAfPluginTunnelingServerStackStatusCallback(EmberStatus status); \
  void emberAfPluginConcentratorStackStatusCallback(EmberStatus status); \
  void emberAfPluginTunnelingClientStackStatusCallback(EmberStatus status); \


#define EMBER_AF_GENERATED_PLUGIN_STACK_STATUS_FUNCTION_CALLS \
  emberAfPluginNetworkFindStackStatusCallback(status); \
  emberAfPluginTunnelingServerStackStatusCallback(status); \
  emberAfPluginConcentratorStackStatusCallback(status); \
  emberAfPluginTunnelingClientStackStatusCallback(status); \


#define EMBER_AF_GENERATED_PLUGIN_MESSAGE_SENT_FUNCTION_DECLARATIONS \
  void emberAfPluginConcentratorMessageSentCallback( \
  EmberOutgoingMessageType type, \
  uint16_t indexOrDestination, \
  EmberApsFrame *apsFrame, \
  EmberStatus status, \
  uint16_t messageLength, \
  uint8_t *messageContents); \


#define EMBER_AF_GENERATED_PLUGIN_MESSAGE_SENT_FUNCTION_CALLS \
  emberAfPluginConcentratorMessageSentCallback( \
  type, \
  indexOrDestination, \
  apsFrame, \
  status, \
  messageLength, \
  messageContents); \


// Generated data for the command discovery
#define GENERATED_COMMANDS { \
    { 0x0019, 0x00, COMMAND_MASK_OUTGOING_SERVER }, /* Over the Air Bootloading / ImageNotify */ \
    { 0x0019, 0x02, COMMAND_MASK_OUTGOING_SERVER }, /* Over the Air Bootloading / QueryNextImageResponse */ \
    { 0x0019, 0x05, COMMAND_MASK_OUTGOING_SERVER }, /* Over the Air Bootloading / ImageBlockResponse */ \
    { 0x0019, 0x07, COMMAND_MASK_OUTGOING_SERVER }, /* Over the Air Bootloading / UpgradeEndResponse */ \
    { 0x0700, 0x00, COMMAND_MASK_OUTGOING_SERVER }, /* Price / PublishPrice */ \
    { 0x0701, 0x00, COMMAND_MASK_OUTGOING_SERVER }, /* Demand Response and Load Control / LoadControlEvent */ \
    { 0x0701, 0x01, COMMAND_MASK_OUTGOING_SERVER }, /* Demand Response and Load Control / CancelLoadControlEvent */ \
    { 0x0701, 0x02, COMMAND_MASK_OUTGOING_SERVER }, /* Demand Response and Load Control / CancelAllLoadControlEvents */ \
    { 0x0703, 0x00, COMMAND_MASK_OUTGOING_SERVER }, /* Messaging / DisplayMessage */ \
    { 0x0703, 0x01, COMMAND_MASK_OUTGOING_SERVER }, /* Messaging / CancelMessage */ \
    { 0x0704, 0x00, COMMAND_MASK_OUTGOING_CLIENT | COMMAND_MASK_INCOMING_SERVER }, /* Tunneling / RequestTunnel */ \
    { 0x0704, 0x00, COMMAND_MASK_OUTGOING_SERVER | COMMAND_MASK_INCOMING_CLIENT }, /* Tunneling / RequestTunnelResponse */ \
    { 0x0704, 0x01, COMMAND_MASK_OUTGOING_CLIENT | COMMAND_MASK_INCOMING_SERVER }, /* Tunneling / CloseTunnel */ \
    { 0x0704, 0x01, COMMAND_MASK_OUTGOING_SERVER | COMMAND_MASK_INCOMING_CLIENT }, /* Tunneling / TransferDataServerToClient */ \
    { 0x0704, 0x02, COMMAND_MASK_OUTGOING_CLIENT | COMMAND_MASK_INCOMING_SERVER }, /* Tunneling / TransferDataClientToServer */ \
    { 0x0704, 0x02, COMMAND_MASK_OUTGOING_SERVER | COMMAND_MASK_INCOMING_CLIENT }, /* Tunneling / TransferDataErrorServerToClient */ \
    { 0x0704, 0x03, COMMAND_MASK_OUTGOING_CLIENT | COMMAND_MASK_INCOMING_SERVER }, /* Tunneling / TransferDataErrorClientToServer */ \
    { 0x0704, 0x06, COMMAND_MASK_INCOMING_CLIENT }, /* Tunneling / TunnelClosureNotification */ \
    { 0x0707, 0x00, COMMAND_MASK_OUTGOING_SERVER }, /* Calendar / PublishCalendar */ \
    { 0x0707, 0x01, COMMAND_MASK_OUTGOING_SERVER }, /* Calendar / PublishDayProfile */ \
    { 0x0707, 0x02, COMMAND_MASK_OUTGOING_SERVER }, /* Calendar / PublishWeekProfile */ \
    { 0x0707, 0x03, COMMAND_MASK_OUTGOING_SERVER }, /* Calendar / PublishSeasons */ \
    { 0x0707, 0x04, COMMAND_MASK_OUTGOING_SERVER }, /* Calendar / PublishSpecialDays */ \
    { 0x070B, 0x00, COMMAND_MASK_OUTGOING_SERVER }, /* Sub-GHz / SuspendZclMessages */ \
    { 0x070B, 0x00, COMMAND_MASK_INCOMING_SERVER }, /* Sub-GHz / GetSuspendZclMessagesStatus */ \
    { 0x0800, 0x00, COMMAND_MASK_OUTGOING_CLIENT | COMMAND_MASK_INCOMING_SERVER }, /* Key Establishment / InitiateKeyEstablishmentRequest */ \
    { 0x0800, 0x00, COMMAND_MASK_OUTGOING_SERVER | COMMAND_MASK_INCOMING_CLIENT }, /* Key Establishment / InitiateKeyEstablishmentResponse */ \
    { 0x0800, 0x01, COMMAND_MASK_OUTGOING_CLIENT | COMMAND_MASK_INCOMING_SERVER }, /* Key Establishment / EphemeralDataRequest */ \
    { 0x0800, 0x01, COMMAND_MASK_OUTGOING_SERVER | COMMAND_MASK_INCOMING_CLIENT }, /* Key Establishment / EphemeralDataResponse */ \
    { 0x0800, 0x02, COMMAND_MASK_OUTGOING_CLIENT | COMMAND_MASK_INCOMING_SERVER }, /* Key Establishment / ConfirmKeyDataRequest */ \
    { 0x0800, 0x02, COMMAND_MASK_OUTGOING_SERVER | COMMAND_MASK_INCOMING_CLIENT }, /* Key Establishment / ConfirmKeyDataResponse */ \
    { 0x0800, 0x03, COMMAND_MASK_OUTGOING_SERVER | COMMAND_MASK_INCOMING_CLIENT }, /* Key Establishment / TerminateKeyEstablishment */ \
  }
#define EMBER_AF_GENERATED_COMMAND_COUNT (32)

// Command manufacturer codes
#define GENERATED_COMMAND_MANUFACTURER_CODES {      \
{0x00, 0x00} \
  }
#define GENERATED_COMMAND_MANUFACTURER_CODE_COUNT (0)


// Generated reporting configuration defaults
#define EMBER_AF_GENERATED_REPORTING_CONFIG_DEFAULTS {\
}
#define EMBER_AF_GENERATED_REPORTING_CONFIG_DEFAULTS_TABLE_SIZE (0)
#endif // SILABS_AF_ENDPOINT_CONFIG
